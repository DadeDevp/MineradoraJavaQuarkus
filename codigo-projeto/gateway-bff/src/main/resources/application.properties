# Configuração da porta HTTP do Quarkus
quarkus.http.port=8095
# Esta linha define a porta em que a aplicação Quarkus irá rodar. Por padrão, Quarkus usa a porta 8080, mas aqui está configurado para usar a porta 8095.

# Configurações de segurança do Keycloak
quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
# Estas linhas configuram a integração com o Keycloak, um servidor de identidade e acesso. A URL do servidor de autenticação, o ID do cliente e a senha do cliente são definidos aqui. Essas configurações são usadas para proteger a aplicação com o OpenID Connect (OIDC).

# Configuração do cliente OIDC
quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}
quarkus.oidc-client.grant.type=password
# Estas configurações estabelecem parâmetros para o cliente OIDC, reutilizando as configurações definidas anteriormente para o servidor de autenticação, ID do cliente e secret. O tipo de concessão está configurado para 'password', o que é típico para fluxos de autenticação direta.

# Configuração do cliente REST
org.br.mineradora.client.ProposalRestClient/mp-rest/url=http://localhost:8091
org.br.mineradora.client.ReportRestClient/mp-rest/url=http://localhost:8081

# Configura as URLs para os clientes REST de 'ProposalRestClient' e 'ReportRestClient'. Estas URLs são os pontos de extremidade para os quais os clientes REST enviarão suas solicitações.
# Biblioteca diferente pq os enpoints rest são protegidos e o token deve ser propagado

# Configuração do Swagger UI e OpenAPI
quarkus.swagger-ui.always-include = true
quarkus.smallrye-openapi.info-description = BR Mineradora: Trade de Minerio - Back-End For Front-End (BFF) - API
# Habilita o Swagger UI para a aplicação e sempre o inclui no build. A descrição da API é definida para fornecer informações sobre a API no Swagger UI.

# Configurações do OpenTracing com Jaeger
quarkus.jaeger.service-name=gateway-bff
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
# Configura a integração com o Jaeger para rastreamento distribuído. Define o nome do serviço, o tipo de amostrador (constante neste caso), o parâmetro do amostrador e um formato de log personalizado para incluir informações de rastreamento.

